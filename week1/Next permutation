//The next permutation of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array
//are sorted in one container according to their lexicographical order, then the next permutation of that array is the permutation that follows it in the sorted 
//container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).

class Solution {
    public void nextPermutation(int[] nums) {
        int i;
        for(i=nums.length-1;i>=1;i--){
            if(nums[i-1]>=nums[i])
                continue;
            else if(nums[i-1]<nums[i]){
                int arr[]=Arrays.copyOfRange(nums,i-1,nums.length);
                Arrays.sort(arr);
                int index=Arrays.binarySearch(arr,nums[i-1]);
                while(index<arr.length&&arr[index+1]==arr[index]){
                    index++;
                }
                int a=arr[index+1];
                int j=i-1;int p=0;
                for(;i<nums.length;i++){
                    if(nums[i]==a)
                    p=i;
                }
                nums[p]=nums[j];
                nums[j]=a;
                rev(nums,j+1);
                break;
            }

        }
        if(i==0){
            Arrays.sort(nums);  
            }
        
    }
    void rev(int nums[],int start){
        int i=start;
        int j=nums.length-1;
        while(i<j){
            int a=nums[i];
            nums[i++]=nums[j];
            nums[j--]=a;
        }
    }
}
